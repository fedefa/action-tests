name: Prepare Prod Deploy
on:
  workflow_dispatch:
    inputs:
      ref:
        required: true
        description: Target GIT ref to release
        default: main
        type: string
jobs:
  prepare-deploy:
    name: Prepare gh deploy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.inputs.ref }}
      - name: Set vars
        id: vars
        run: |
          echo ::set-output name=release_name::$(git show -s --date=format:'%y.%m.%d-%H.%M.%S' --format=%cd)
      - name: Check if we should create a release
        id: should_create_release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          response=$(gh release view v${{ steps.vars.outputs.release_name }} --json 'id')
          if [[ response == *"not found"* ]]; then
             echo "Creating release v${{ steps.vars.outputs.release_name }}"
             echo "::set-output name=should_create::true"
          else
            echo "Release v${{ steps.vars.outputs.release_name }} already exists"
          fi
      - name: Prepare release notes
        if: steps.should_create_release.outputs.should_create == 'true'
        run: gh release create v${{ steps.vars.outputs.release_name }} --title ${{ steps.vars.outputs.release_name }} --target $GITHUB_SHA --generate-notes --draft
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Create release
        if: steps.should_create_release.outputs.should_create == 'true'
        run: gh release create v${{ steps.vars.outputs.release_name }} --title ${{ steps.vars.outputs.release_name }} --target $GITHUB_SHA --generate-notes --draft
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  call-deploy-prod-workflow:
    uses: ./.github/workflows/deploy-prod.yml
    needs: prepare-deploy
    if: needs.prepare-deploy.result == 'success'
    with:
      username: mona
    secrets: inherit

